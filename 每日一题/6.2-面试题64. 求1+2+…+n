/*
求 1+2+...+n ，要求不能使用乘除法、for、while、if、else、switch、case等关键字及条件判断语句（A?B:C）。
示例 1：

输入: n = 3
输出: 6
示例 2：

输入: n = 9
输出: 45
 

限制：

1 <= n <= 10000
*/


//方法一： 用逻辑运算的短路特性作为递归终止条件
/*
递归终止时需要用到if判断，但是题目要求不能用if，我们可以利用逻辑运算的短路特性来结束递归
A&&B 当A为false时，A&&B已经为false，就不会执行B

利用这一特性，我们可以将判断是否为递归的出口看作 A && B 表达式中的 A 部分，递归的主体函数看作 B 部分。如果不是递归出口，则返回 True，并继续执行表达式 B 的部分，否则递归结束。

*/

class Solution {
public:
    int sumNums(int n) {
        n && (n+=sumNums(n-1)); //用逻辑运算作为递归终止条件
        return n;
    }
};

/*
给定一个二叉树，返回所有从根节点到叶子节点的路径。

说明: 叶子节点是指没有子节点的节点。

示例:

输入:

   1
 /   \
2     3
 \
  5

输出: ["1->2->5", "1->3"]

解释: 所有根节点到叶子节点的路径为: 1->2->5, 1->3

*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<string> ans;
    vector<string> binaryTreePaths(TreeNode* root) {
        if(root==NULL){
            return ans;
        }
        string s = to_string(root->val);
        dfs(root,s);
        return ans;       
    }
    void dfs(TreeNode* root,string s){   
        if(root->left==NULL && root->right==NULL){
            ans.push_back(s);
            return ;
        }
        if(root->left){
            dfs(root->left,s+"->"+to_string(root->left->val));
        }

        if(root->right){
            dfs(root->right,s+"->"+to_string(root->right->val));
        }


    }
};

/*
根据每日 气温 列表，请重新生成一个列表，对应位置的输入是你需要再等待多久温度才会升高超过该日的天数。如果之后都不会升高，请在该位置用 0 来代替。

例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。

提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的均为华氏度，都是在 [30, 100] 范围内的整数。


*/
//方法一：七个月前做的 把值和索引都放在栈中
class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& T) {
        stack<pair<int,int>> tmp; //first为value ，second为下标
        
        vector<int>res;
        tmp.push(make_pair(T[0],0));
        res.push_back(0);
        
        for(int i=1;i<T.size();i++){
            while(!tmp.empty() && T[i]>tmp.top().first){  //栈顶元素找到比它大的值
                res[tmp.top().second]=i-tmp.top().second; //更新res的值
                tmp.pop(); //出栈
            }
            //当前元素进栈
            tmp.push(make_pair(T[i],i));
            res.push_back(0);
            
        }
        
        return res;
        
    }
};

//方法二：6.11做 只用把索引入栈即可
class Solution {
public:
    vector<int> dailyTemperatures(vector<int>& T) {

        stack<int>tmp;
    
        vector<int> ans(T.size());
        tmp.push(0);
        for(int i=1;i<T.size();i++){
            while(!tmp.empty()&&T[i]>T[tmp.top()]){ //当前元素大于栈顶元素
                int t=tmp.top();
                ans[t] = i-t;
                tmp.pop();//栈顶元素找到比他大的，则出栈
            }
           
            tmp.push(i);
            
        }
        return ans;

    }
};

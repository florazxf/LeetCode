/*
给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。

有效字符串需满足：
左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。

示例 1:

输入: "()"
输出: true
示例 2:

输入: "()[]{}"
输出: true
示例 3:

输入: "(]"
输出: false
示例 4:

输入: "([)]"
输出: false
示例 5:

输入: "{[]}"
输出: true
*/

//看清楚题：左右括号必须是挨着的，所以用栈的top和当前的s[i]比很容易做

class Solution {
public:
    bool isValid(string s) {
        stack<char> a;
        
        for(int i=0;i<s.size();i++){
            if(s[i]=='('||s[i]=='{'||s[i]=='['){
                    a.push(s[i]);
            }
            else{
                if(!a.empty()){ 
            if((a.top()=='(' && s[i]==')' )||(a.top()=='[' && s[i]==']')||(a.top()=='{' && s[i]=='}'))
                        a.pop();
            else{ //没匹配到证明它前面没有(、[或{了 
                return false;
            }
                    
                }
                else{return false;}

            }
        }
        
        if(a.empty()){
            return true;
        }
        else{
            return false;
        }
        
        
    }
};

/*
给你一个字符串 s，「k 倍重复项删除操作」将会从 s 中选择 k 个相邻且相等的字母，并删除它们，使被删去的字符串的左侧和右侧连在一起。

你需要对 s 重复进行无限次这样的删除操作，直到无法继续为止。

在执行完所有删除操作后，返回最终得到的字符串。

本题答案保证唯一。

示例 1：

输入：s = "abcd", k = 2
输出："abcd"
解释：没有要删除的内容。

示例 2：

输入：s = "deeedbbcccbdaa", k = 3
输出："aa"
解释： 
先删除 "eee" 和 "ccc"，得到 "ddbbbdaa"
再删除 "bbb"，得到 "dddaa"
最后删除 "ddd"，得到 "aa"


示例 3：

输入：s = "pbbcggttciiippooaais", k = 2
输出："ps"
*/

// 速度不行
class Solution {
public:
    string removeDuplicates(string s, int k) {
        int top=0;
        int j=1;
        for(char ch : s){
            if(top<k-1 ||s[top-1]!=ch){
                s[top++] = ch;
            }
            else{//当前ch和前面的元素相等
                
                while(j<k && s[top-j]==ch){
                    j = j+1;
                }
                if(j==k){ //有连续k个相同字母
                    top = top-k+1;
                }
                else{
                    s[top++]=ch;
                }
                j=1;
                
            }
        }
        s.resize(top);
        return s;
        
    }
};

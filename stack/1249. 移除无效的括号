/*
给你一个由 '('、')' 和小写字母组成的字符串 s。

你需要从字符串中删除最少数目的 '(' 或者 ')' （可以删除任意位置的括号)，使得剩下的「括号字符串」有效。

请返回任意一个合法字符串。

有效「括号字符串」应当符合以下 任意一条 要求：

空字符串或只包含小写字母的字符串
可以被写作 AB（A 连接 B）的字符串，其中 A 和 B 都是有效「括号字符串」
可以被写作 (A) 的字符串，其中 A 是一个有效的「括号字符串」

示例 1：

输入：s = "lee(t(c)o)de)"
输出："lee(t(c)o)de"
解释："lee(t(co)de)" , "lee(t(c)ode)" 也是一个可行答案。

示例 2：

输入：s = "a)b(c)d"
输出："ab(c)d"
*/


class Solution {
public:
    string minRemoveToMakeValid(string s) {
        stack<pair<char,int>> tmp; //first是非法括号，int是索引
        string res="";  //存放结果
        for(int i=0;i<s.size();i++){  //把非法括号及其索引放入栈中
            if(s[i]=='('){
                tmp.push(make_pair(s[i],i));
            }
            else if(s[i]==')'){
                if(!tmp.empty() && tmp.top().first=='('){
                    tmp.pop();
                }
                else{
                    tmp.push(make_pair(s[i],i));
                }
            }
        }
        
        for(int i=s.size()-1;i>=0;i--){ //删除非法括号
            
            if(!tmp.empty() && i==tmp.top().second){
                tmp.pop();
            } 
            else{
                res+=s[i];
            }
        }
        reverse(res.begin(),res.end());
        return res;  
    }
};

/*
给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。

说明：本题中，我们将空字符串定义为有效的回文串。

示例 1:

输入: "A man, a plan, a canal: Panama"
输出: true
示例 2:

输入: "race a car"
输出: false


*/

class Solution {
public:
    bool isPalindrome(string s) {
       
        int right = s.size()-1;
        int left = 0;
        if(s.size()==0 or s.size()==1){return true;}
            while(left<right){
            if((s[left]>='a'&&s[left]<='z') || (s[left]>='A'&&s[left]<='Z') || (s[left]>='0'&&s[left]<='9')){                       if((s[right]>='a'&&s[right]<='z') || (s[right]>='A'&&s[right]<='Z') || (s[right]>='0'&&s[right]<='9')){
                if(s[left]>='A'&&s[left]<='Z'){
                    s[left] = s[left]+32;
                }
                if(s[right]>='A'&&s[right]<='Z'){
                    s[right] = s[right]+32;
                }
                
                if(s[left]!=s[right]){
                    return false;
                }
                else{
   
                    left++;
                    right--;

                }
                
            }
                else{ //right不是字母或数字
                    right--;
                    
                }
            }
                else{//left不是字母或数字
                    left++;
                }

        }
        

        return true;
        
    }
};


6.19每日一题做的
class Solution {
public:

    bool is(char c){
        if((c>='A'&&c<='Z')||(c>='a'&&c<='z')||(c>='0'&&c<='9')){//是字母或是z数字即满足条件
            return true;
        }
        else{
            return false;
        }        
    }
    bool isPalindrome(string s) {

        int left=0;
        int right = s.size()-1;


        while(left<right){
           // cout<<left<<' '<<right<<endl;



            if(is(s[left])&&is(s[right])){//左右都是字母或数字

                if((s[left]>='A'&&s[left]<='Z')||(s[right]>='A'&&s[right]<='Z')){//是大写字母
                    if(s[left]>='A'&&s[left]<='Z'){ s[left]=s[left]-'A'+'a';}//cout<<s[left];
                    if(s[right]>='A'&&s[right]<='Z'){  s[right]=s[right]-'A'+'a';}
                
                }

                if(s[left]==s[right]){
                    left++;
                    right--;
                }
                else{
                    return false;
                }

            }
            else{
                if(!is(s[left])){
                    left++;
                }

                if(!is(s[right])){
                    right--;
                }
            }

        }
        return true;
        
    }
};

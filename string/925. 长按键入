/*
你的朋友正在使用键盘输入他的名字 name。偶尔，在键入字符 c 时，按键可能会被长按，而字符可能被输入 1 次或多次。

你将会检查键盘输入的字符 typed。如果它对应的可能是你的朋友的名字（其中一些字符可能被长按），那么就返回 True。

 

示例 1：

输入：name = "alex", typed = "aaleex"
输出：true
解释：'alex' 中的 'a' 和 'e' 被长按。
示例 2：

输入：name = "saeed", typed = "ssaaedd"
输出：false
解释：'e' 一定需要被键入两次，但在 typed 的输出中不是这样。
示例 3：

输入：name = "leelee", typed = "lleeelee"
输出：true
示例 4：

输入：name = "laiden", typed = "laiden"
输出：true
解释：长按名字中的字符并不是必要的。
 

提示：

name.length <= 1000
typed.length <= 1000
name 和 typed 的字符都是小写字母。

*/

//方法一：自己的方法

class Solution {
public:
    bool isLongPressedName(string name, string typed) {
        int i,j;
        if(name==typed){
            return true;
        }
        if(name.size()>typed.size()){
            return false;
        }
    
        for(i=0,j=0;i<name.size()&&j<typed.size();i++,j++){
                if(typed[j]!=name[i]){
                    return false;
                }

                while(typed[j]==name[i]){
                    if(i<name.size()-1&&name[i]==name[i+1]){ //name有连续的字母
                        if(j<typed.size()-1&&typed[j+1]==name[i+1]){
                            i++;
                        }
                        else{
                            return false;
                        }    
                    }
                    j++;
                }
                j--;
        }
        if(i<name.size()){//"pyplrzi" "ppyypllrz"
            return false;
        }
        
        return true;
        
    }
};

//方法二：
//记录name和typed的当前字母连续出现的个数，typed的个数应大于等于name的个数
class Solution {
public:
    bool isLongPressedName(string name, string typed) {
        int j=0;
        for(int i=0;i<name.size();i++){
             char first = name[i];
             int name_count=0;
             while(name[i]==first){//name的当前字母连续出现的个数
                  name_count++;
                  i++;
             }
            int count=0;
             while(typed[j]==first){//typed的当前字母连续出现的个数
                 count++;
                 j++;
             }
             if(name_count>count){
                 return false;
             }
             i--;

         }
         return true;
    }
};

//方法三
/*
标题以typed为外循化，挨个遍历然后与name中的字符进行比较。如果相等name和typed同时向后移动一个字符，不相等typed移动一个字符。
最后循环结束，我们只需要查看j是否等于name的长度就行了
*/
class Solution {
public:
    bool isLongPressedName(string name, string typed) {
        int j=0;
        for(int i=0;i<typed.size();i++){
            if(typed[i]==name[j]){
                j++;
            }
            if(j==name.size())
            {
                break;
            }

         }
         if(j==name.size()){
             return true;
         }
         else{
             return false;
         }
    }
};
